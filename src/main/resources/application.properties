# === Datasource (Supabase via PgBouncer) ===
spring.datasource.url=jdbc:postgresql://aws-1-sa-east-1.pooler.supabase.com:6543/postgres?sslmode=require&prepareThreshold=0&preferQueryMode=simple&autosave=conservative
spring.datasource.username=postgres.linzzbxbpabzcbrfovbd
spring.datasource.password=5z5rv9fRgjsjPwps
spring.datasource.driver-class-name=org.postgresql.Driver

# HikariCP ? Cloud Run tem containers efêmeros, mantenha pool pequeno
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=0
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.validation-timeout=5000

# === JPA/Hibernate ===
# Para ambiente gerenciado, evite mexer no schema automaticamente:
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Evita LazyInitializationException até migrarmos para DTOs
spring.jpa.open-in-view=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# (Opcional) timeouts SQL mais curtos para falhas rápidas
spring.jpa.properties.hibernate.jdbc.time_out=20

# === Server (Cloud Run) ===
server.port=${PORT:8080}
server.address=0.0.0.0

# === Init SQL desabilitado (se você não usa data.sql/schema.sql) ===
spring.sql.init.mode=never

# === Logging mínimo (ligue DEBUG só para investigar) ===
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=INFO
logging.level.com.zaxxer.hikari=INFO
